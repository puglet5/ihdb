class Poster < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Poster, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def title: () -> String?

    def title=: (String?) -> String?

    def title?: () -> bool

    def title_changed?: () -> bool

    def title_change: () -> [ String?, String? ]

    def title_will_change!: () -> void

    def title_was: () -> String?

    def title_previously_changed?: () -> bool

    def title_previous_change: () -> Array[String?]?

    def title_previously_was: () -> String?

    def title_before_last_save: () -> String?

    def title_change_to_be_saved: () -> Array[String?]?

    def title_in_database: () -> String?

    def saved_change_to_title: () -> Array[String?]?

    def saved_change_to_title?: () -> bool

    def will_save_change_to_title?: () -> bool

    def restore_title!: () -> void

    def clear_title_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void

    def user_id: () -> Integer?

    def user_id=: (Integer?) -> Integer?

    def user_id?: () -> bool

    def user_id_changed?: () -> bool

    def user_id_change: () -> [ Integer?, Integer? ]

    def user_id_will_change!: () -> void

    def user_id_was: () -> Integer?

    def user_id_previously_changed?: () -> bool

    def user_id_previous_change: () -> Array[Integer?]?

    def user_id_previously_was: () -> Integer?

    def user_id_before_last_save: () -> Integer?

    def user_id_change_to_be_saved: () -> Array[Integer?]?

    def user_id_in_database: () -> Integer?

    def saved_change_to_user_id: () -> Array[Integer?]?

    def saved_change_to_user_id?: () -> bool

    def will_save_change_to_user_id?: () -> bool

    def restore_user_id!: () -> void

    def clear_user_id_change: () -> void

    def plain_text_description: () -> String?

    def plain_text_description=: (String?) -> String?

    def plain_text_description?: () -> bool

    def plain_text_description_changed?: () -> bool

    def plain_text_description_change: () -> [ String?, String? ]

    def plain_text_description_will_change!: () -> void

    def plain_text_description_was: () -> String?

    def plain_text_description_previously_changed?: () -> bool

    def plain_text_description_previous_change: () -> Array[String?]?

    def plain_text_description_previously_was: () -> String?

    def plain_text_description_before_last_save: () -> String?

    def plain_text_description_change_to_be_saved: () -> Array[String?]?

    def plain_text_description_in_database: () -> String?

    def saved_change_to_plain_text_description: () -> Array[String?]?

    def saved_change_to_plain_text_description?: () -> bool

    def will_save_change_to_plain_text_description?: () -> bool

    def restore_plain_text_description!: () -> void

    def clear_plain_text_description_change: () -> void
  end
  include GeneratedAttributeMethods
  def images: () -> Image::ActiveRecord_Associations_CollectionProxy
  def images=: (Image::ActiveRecord_Associations_CollectionProxy | Array[Image]) -> (Image::ActiveRecord_Associations_CollectionProxy | Array[Image])
  def image_ids: () -> Array[Integer]
  def image_ids=: (Array[Integer]) -> Array[Integer]
  def image_attachments: () -> ActiveStorage::Attachment::ActiveRecord_Associations_CollectionProxy
  def image_attachments=: (ActiveStorage::Attachment::ActiveRecord_Associations_CollectionProxy | Array[ActiveStorage::Attachment]) -> (ActiveStorage::Attachment::ActiveRecord_Associations_CollectionProxy | Array[ActiveStorage::Attachment])
  def image_attachment_ids: () -> Array[Integer]
  def image_attachment_ids=: (Array[Integer]) -> Array[Integer]
  def thumbnail_attachment: () -> ActiveStorage::Attachment?
  def thumbnail_attachment=: (ActiveStorage::Attachment?) -> ActiveStorage::Attachment?
  def build_thumbnail_attachment: (untyped) -> ActiveStorage::Attachment
  def create_thumbnail_attachment: (untyped) -> ActiveStorage::Attachment
  def create_thumbnail_attachment!: (untyped) -> ActiveStorage::Attachment
  def reload_thumbnail_attachment: () -> ActiveStorage::Attachment?
  def thumbnail_blob: () -> ActiveStorage::Blob?
  def thumbnail_blob=: (ActiveStorage::Blob?) -> ActiveStorage::Blob?
  def build_thumbnail_blob: (untyped) -> ActiveStorage::Blob
  def create_thumbnail_blob: (untyped) -> ActiveStorage::Blob
  def create_thumbnail_blob!: (untyped) -> ActiveStorage::Blob
  def reload_thumbnail_blob: () -> ActiveStorage::Blob?
  def rich_text_description: () -> ActionText::RichText?
  def rich_text_description=: (ActionText::RichText?) -> ActionText::RichText?
  def build_rich_text_description: (untyped) -> ActionText::RichText
  def create_rich_text_description: (untyped) -> ActionText::RichText
  def create_rich_text_description!: (untyped) -> ActionText::RichText
  def reload_rich_text_description: () -> ActionText::RichText?
  def user: () -> User
  def user=: (User?) -> User?
  def reload_user: () -> User?
  def build_user: (untyped) -> User
  def create_user: (untyped) -> User
  def create_user!: (untyped) -> User
  module GeneratedAssociationMethods
    def thumbnail: () -> ActiveStorage::Attached::One

    def thumbnail=: (ActionDispatch::Http::UploadedFile) -> ActionDispatch::Http::UploadedFile
                  | (Rack::Test::UploadedFile) -> Rack::Test::UploadedFile
                  | (ActiveStorage::Blob) -> ActiveStorage::Blob
                  | (String) -> String
                  | ({ io: IO, filename: String, content_type: String? }) -> { io: IO, filename: String, content_type: String? }
                  | (nil) -> nil
  end
  include GeneratedAssociationMethods

  def self.with_attached_thumbnail: () -> ActiveRecord_Relation

  module GeneratedRelationMethods
    def with_attached_thumbnail: () -> ActiveRecord_Relation
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Poster, Integer]
    include Enumerable[Poster]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Poster, Integer]
  end
end
