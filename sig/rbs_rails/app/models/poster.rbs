class Poster < ::ApplicationRecord
  extend ::_ActiveRecord_Relation_ClassMethods[::Poster, ::Poster::ActiveRecord_Relation, ::Integer]

  module GeneratedAttributeMethods
    def id: () -> ::Integer

    def id=: (::Integer) -> ::Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ ::Integer?, ::Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> ::Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> ::Array[::Integer?]?

    def id_previously_was: () -> ::Integer?

    def id_before_last_save: () -> ::Integer?

    def id_change_to_be_saved: () -> ::Array[::Integer?]?

    def id_in_database: () -> ::Integer?

    def saved_change_to_id: () -> ::Array[::Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def title: () -> ::String?

    def title=: (::String?) -> ::String?

    def title?: () -> bool

    def title_changed?: () -> bool

    def title_change: () -> [ ::String?, ::String? ]

    def title_will_change!: () -> void

    def title_was: () -> ::String?

    def title_previously_changed?: () -> bool

    def title_previous_change: () -> ::Array[::String?]?

    def title_previously_was: () -> ::String?

    def title_before_last_save: () -> ::String?

    def title_change_to_be_saved: () -> ::Array[::String?]?

    def title_in_database: () -> ::String?

    def saved_change_to_title: () -> ::Array[::String?]?

    def saved_change_to_title?: () -> bool

    def will_save_change_to_title?: () -> bool

    def restore_title!: () -> void

    def clear_title_change: () -> void

    def created_at: () -> ::ActiveSupport::TimeWithZone

    def created_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ::ActiveSupport::TimeWithZone

    def updated_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void

    def user_id: () -> ::Integer?

    def user_id=: (::Integer?) -> ::Integer?

    def user_id?: () -> bool

    def user_id_changed?: () -> bool

    def user_id_change: () -> [ ::Integer?, ::Integer? ]

    def user_id_will_change!: () -> void

    def user_id_was: () -> ::Integer?

    def user_id_previously_changed?: () -> bool

    def user_id_previous_change: () -> ::Array[::Integer?]?

    def user_id_previously_was: () -> ::Integer?

    def user_id_before_last_save: () -> ::Integer?

    def user_id_change_to_be_saved: () -> ::Array[::Integer?]?

    def user_id_in_database: () -> ::Integer?

    def saved_change_to_user_id: () -> ::Array[::Integer?]?

    def saved_change_to_user_id?: () -> bool

    def will_save_change_to_user_id?: () -> bool

    def restore_user_id!: () -> void

    def clear_user_id_change: () -> void

    def plain_text_description: () -> ::String?

    def plain_text_description=: (::String?) -> ::String?

    def plain_text_description?: () -> bool

    def plain_text_description_changed?: () -> bool

    def plain_text_description_change: () -> [ ::String?, ::String? ]

    def plain_text_description_will_change!: () -> void

    def plain_text_description_was: () -> ::String?

    def plain_text_description_previously_changed?: () -> bool

    def plain_text_description_previous_change: () -> ::Array[::String?]?

    def plain_text_description_previously_was: () -> ::String?

    def plain_text_description_before_last_save: () -> ::String?

    def plain_text_description_change_to_be_saved: () -> ::Array[::String?]?

    def plain_text_description_in_database: () -> ::String?

    def saved_change_to_plain_text_description: () -> ::Array[::String?]?

    def saved_change_to_plain_text_description?: () -> bool

    def will_save_change_to_plain_text_description?: () -> bool

    def restore_plain_text_description!: () -> void

    def clear_plain_text_description_change: () -> void

    def acquisition_date: () -> ::Date?

    def acquisition_date=: (::Date?) -> ::Date?

    def acquisition_date?: () -> bool

    def acquisition_date_changed?: () -> bool

    def acquisition_date_change: () -> [ ::Date?, ::Date? ]

    def acquisition_date_will_change!: () -> void

    def acquisition_date_was: () -> ::Date?

    def acquisition_date_previously_changed?: () -> bool

    def acquisition_date_previous_change: () -> ::Array[::Date?]?

    def acquisition_date_previously_was: () -> ::Date?

    def acquisition_date_before_last_save: () -> ::Date?

    def acquisition_date_change_to_be_saved: () -> ::Array[::Date?]?

    def acquisition_date_in_database: () -> ::Date?

    def saved_change_to_acquisition_date: () -> ::Array[::Date?]?

    def saved_change_to_acquisition_date?: () -> bool

    def will_save_change_to_acquisition_date?: () -> bool

    def restore_acquisition_date!: () -> void

    def clear_acquisition_date_change: () -> void

    def event_datetime: () -> ::ActiveSupport::TimeWithZone?

    def event_datetime=: (::ActiveSupport::TimeWithZone?) -> ::ActiveSupport::TimeWithZone?

    def event_datetime?: () -> bool

    def event_datetime_changed?: () -> bool

    def event_datetime_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def event_datetime_will_change!: () -> void

    def event_datetime_was: () -> ::ActiveSupport::TimeWithZone?

    def event_datetime_previously_changed?: () -> bool

    def event_datetime_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def event_datetime_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def event_datetime_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def event_datetime_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def event_datetime_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_event_datetime: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_event_datetime?: () -> bool

    def will_save_change_to_event_datetime?: () -> bool

    def restore_event_datetime!: () -> void

    def clear_event_datetime_change: () -> void

    def owner: () -> ::String?

    def owner=: (::String?) -> ::String?

    def owner?: () -> bool

    def owner_changed?: () -> bool

    def owner_change: () -> [ ::String?, ::String? ]

    def owner_will_change!: () -> void

    def owner_was: () -> ::String?

    def owner_previously_changed?: () -> bool

    def owner_previous_change: () -> ::Array[::String?]?

    def owner_previously_was: () -> ::String?

    def owner_before_last_save: () -> ::String?

    def owner_change_to_be_saved: () -> ::Array[::String?]?

    def owner_in_database: () -> ::String?

    def saved_change_to_owner: () -> ::Array[::String?]?

    def saved_change_to_owner?: () -> bool

    def will_save_change_to_owner?: () -> bool

    def restore_owner!: () -> void

    def clear_owner_change: () -> void

    def sku: () -> ::String?

    def sku=: (::String?) -> ::String?

    def sku?: () -> bool

    def sku_changed?: () -> bool

    def sku_change: () -> [ ::String?, ::String? ]

    def sku_will_change!: () -> void

    def sku_was: () -> ::String?

    def sku_previously_changed?: () -> bool

    def sku_previous_change: () -> ::Array[::String?]?

    def sku_previously_was: () -> ::String?

    def sku_before_last_save: () -> ::String?

    def sku_change_to_be_saved: () -> ::Array[::String?]?

    def sku_in_database: () -> ::String?

    def saved_change_to_sku: () -> ::Array[::String?]?

    def saved_change_to_sku?: () -> bool

    def will_save_change_to_sku?: () -> bool

    def restore_sku!: () -> void

    def clear_sku_change: () -> void

    def condition: () -> ::String?

    def condition=: (::String?) -> ::String?

    def condition?: () -> bool

    def condition_changed?: () -> bool

    def condition_change: () -> [ ::String?, ::String? ]

    def condition_will_change!: () -> void

    def condition_was: () -> ::String?

    def condition_previously_changed?: () -> bool

    def condition_previous_change: () -> ::Array[::String?]?

    def condition_previously_was: () -> ::String?

    def condition_before_last_save: () -> ::String?

    def condition_change_to_be_saved: () -> ::Array[::String?]?

    def condition_in_database: () -> ::String?

    def saved_change_to_condition: () -> ::Array[::String?]?

    def saved_change_to_condition?: () -> bool

    def will_save_change_to_condition?: () -> bool

    def restore_condition!: () -> void

    def clear_condition_change: () -> void

    def status: () -> ::String?

    def status=: (::String?) -> ::String?

    def status?: () -> bool

    def status_changed?: () -> bool

    def status_change: () -> [ ::String?, ::String? ]

    def status_will_change!: () -> void

    def status_was: () -> ::String?

    def status_previously_changed?: () -> bool

    def status_previous_change: () -> ::Array[::String?]?

    def status_previously_was: () -> ::String?

    def status_before_last_save: () -> ::String?

    def status_change_to_be_saved: () -> ::Array[::String?]?

    def status_in_database: () -> ::String?

    def saved_change_to_status: () -> ::Array[::String?]?

    def saved_change_to_status?: () -> bool

    def will_save_change_to_status?: () -> bool

    def restore_status!: () -> void

    def clear_status_change: () -> void

    def category: () -> ::String?

    def category=: (::String?) -> ::String?

    def category?: () -> bool

    def category_changed?: () -> bool

    def category_change: () -> [ ::String?, ::String? ]

    def category_will_change!: () -> void

    def category_was: () -> ::String?

    def category_previously_changed?: () -> bool

    def category_previous_change: () -> ::Array[::String?]?

    def category_previously_was: () -> ::String?

    def category_before_last_save: () -> ::String?

    def category_change_to_be_saved: () -> ::Array[::String?]?

    def category_in_database: () -> ::String?

    def saved_change_to_category: () -> ::Array[::String?]?

    def saved_change_to_category?: () -> bool

    def will_save_change_to_category?: () -> bool

    def restore_category!: () -> void

    def clear_category_change: () -> void

    def locality_id: () -> ::Integer?

    def locality_id=: (::Integer?) -> ::Integer?

    def locality_id?: () -> bool

    def locality_id_changed?: () -> bool

    def locality_id_change: () -> [ ::Integer?, ::Integer? ]

    def locality_id_will_change!: () -> void

    def locality_id_was: () -> ::Integer?

    def locality_id_previously_changed?: () -> bool

    def locality_id_previous_change: () -> ::Array[::Integer?]?

    def locality_id_previously_was: () -> ::Integer?

    def locality_id_before_last_save: () -> ::Integer?

    def locality_id_change_to_be_saved: () -> ::Array[::Integer?]?

    def locality_id_in_database: () -> ::Integer?

    def saved_change_to_locality_id: () -> ::Array[::Integer?]?

    def saved_change_to_locality_id?: () -> bool

    def will_save_change_to_locality_id?: () -> bool

    def restore_locality_id!: () -> void

    def clear_locality_id_change: () -> void
  end
  include GeneratedAttributeMethods
  def roles: () -> ::Role::ActiveRecord_Associations_CollectionProxy
  def roles=: (::Role::ActiveRecord_Associations_CollectionProxy | ::Array[::Role]) -> (::Role::ActiveRecord_Associations_CollectionProxy | ::Array[::Role])
  def role_ids: () -> ::Array[::Integer]
  def role_ids=: (::Array[::Integer]) -> ::Array[::Integer]
  def images: () -> ::Image::ActiveRecord_Associations_CollectionProxy
  def images=: (::Image::ActiveRecord_Associations_CollectionProxy | ::Array[::Image]) -> (::Image::ActiveRecord_Associations_CollectionProxy | ::Array[::Image])
  def image_ids: () -> ::Array[::Integer]
  def image_ids=: (::Array[::Integer]) -> ::Array[::Integer]
  def image_attachments: () -> ::ActiveStorage::Attachment::ActiveRecord_Associations_CollectionProxy
  def image_attachments=: (::ActiveStorage::Attachment::ActiveRecord_Associations_CollectionProxy | ::Array[::ActiveStorage::Attachment]) -> (::ActiveStorage::Attachment::ActiveRecord_Associations_CollectionProxy | ::Array[::ActiveStorage::Attachment])
  def image_attachment_ids: () -> ::Array[::Integer]
  def image_attachment_ids=: (::Array[::Integer]) -> ::Array[::Integer]
  def thumbnail_attachment: () -> ::ActiveStorage::Attachment?
  def thumbnail_attachment=: (::ActiveStorage::Attachment?) -> ::ActiveStorage::Attachment?
  def build_thumbnail_attachment: (?untyped) -> ::ActiveStorage::Attachment
  def create_thumbnail_attachment: (untyped) -> ::ActiveStorage::Attachment
  def create_thumbnail_attachment!: (untyped) -> ::ActiveStorage::Attachment
  def reload_thumbnail_attachment: () -> ::ActiveStorage::Attachment?
  def thumbnail_blob: () -> ::ActiveStorage::Blob?
  def thumbnail_blob=: (::ActiveStorage::Blob?) -> ::ActiveStorage::Blob?
  def build_thumbnail_blob: (?untyped) -> ::ActiveStorage::Blob
  def create_thumbnail_blob: (untyped) -> ::ActiveStorage::Blob
  def create_thumbnail_blob!: (untyped) -> ::ActiveStorage::Blob
  def reload_thumbnail_blob: () -> ::ActiveStorage::Blob?
  def rich_text_description: () -> ::ActionText::RichText?
  def rich_text_description=: (::ActionText::RichText?) -> ::ActionText::RichText?
  def build_rich_text_description: (?untyped) -> ::ActionText::RichText
  def create_rich_text_description: (untyped) -> ::ActionText::RichText
  def create_rich_text_description!: (untyped) -> ::ActionText::RichText
  def reload_rich_text_description: () -> ::ActionText::RichText?
  def user: () -> ::User
  def user=: (::User?) -> ::User?
  def reload_user: () -> ::User?
  def build_user: (untyped) -> ::User
  def create_user: (untyped) -> ::User
  def create_user!: (untyped) -> ::User
  def locality: () -> ::Locality?
  def locality=: (::Locality?) -> ::Locality?
  def reload_locality: () -> ::Locality?
  def build_locality: (untyped) -> ::Locality
  def create_locality: (untyped) -> ::Locality
  def create_locality!: (untyped) -> ::Locality
  module GeneratedAssociationMethods
    def thumbnail: () -> ::ActiveStorage::Attached::One

    def thumbnail=: (::ActionDispatch::Http::UploadedFile) -> ::ActionDispatch::Http::UploadedFile
                  | (::Rack::Test::UploadedFile) -> ::Rack::Test::UploadedFile
                  | (::ActiveStorage::Blob) -> ::ActiveStorage::Blob
                  | (::String) -> ::String
                  | ({ io: ::IO, filename: ::String, content_type: ::String? }) -> { io: ::IO, filename: ::String, content_type: ::String? }
                  | (nil) -> nil
  end
  include GeneratedAssociationMethods

  def displayed!: () -> bool
  def displayed?: () -> bool
  def archived!: () -> bool
  def archived?: () -> bool
  def perfect!: () -> bool
  def perfect?: () -> bool
  def damaged!: () -> bool
  def damaged?: () -> bool
  def poster!: () -> bool
  def poster?: () -> bool
  def self.displayed: () -> ::Poster::ActiveRecord_Relation
  def self.archived: () -> ::Poster::ActiveRecord_Relation
  def self.perfect: () -> ::Poster::ActiveRecord_Relation
  def self.damaged: () -> ::Poster::ActiveRecord_Relation
  def self.poster: () -> ::Poster::ActiveRecord_Relation
  def self.with_attached_thumbnail: () -> ::Poster::ActiveRecord_Relation

  module GeneratedRelationMethods
    def displayed: () -> ::Poster::ActiveRecord_Relation

    def archived: () -> ::Poster::ActiveRecord_Relation

    def perfect: () -> ::Poster::ActiveRecord_Relation

    def damaged: () -> ::Poster::ActiveRecord_Relation

    def poster: () -> ::Poster::ActiveRecord_Relation

    def with_attached_thumbnail: () -> ::Poster::ActiveRecord_Relation
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include ::Poster::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::Poster, ::Integer]
    include ::Enumerable[::Poster]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include ::Poster::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::Poster, ::Integer]
  end
end
