class User < ::ApplicationRecord
  class HABTM_Roles < ::ActiveRecord::Base
    extend ::_ActiveRecord_Relation_ClassMethods[::User::HABTM_Roles, ::User::HABTM_Roles::ActiveRecord_Relation, top]

    module GeneratedAttributeMethods
      def user_id: () -> ::Integer?

      def user_id=: (::Integer?) -> ::Integer?

      def user_id?: () -> bool

      def user_id_changed?: () -> bool

      def user_id_change: () -> [ ::Integer?, ::Integer? ]

      def user_id_will_change!: () -> void

      def user_id_was: () -> ::Integer?

      def user_id_previously_changed?: () -> bool

      def user_id_previous_change: () -> ::Array[::Integer?]?

      def user_id_previously_was: () -> ::Integer?

      def user_id_before_last_save: () -> ::Integer?

      def user_id_change_to_be_saved: () -> ::Array[::Integer?]?

      def user_id_in_database: () -> ::Integer?

      def saved_change_to_user_id: () -> ::Array[::Integer?]?

      def saved_change_to_user_id?: () -> bool

      def will_save_change_to_user_id?: () -> bool

      def restore_user_id!: () -> void

      def clear_user_id_change: () -> void

      def role_id: () -> ::Integer?

      def role_id=: (::Integer?) -> ::Integer?

      def role_id?: () -> bool

      def role_id_changed?: () -> bool

      def role_id_change: () -> [ ::Integer?, ::Integer? ]

      def role_id_will_change!: () -> void

      def role_id_was: () -> ::Integer?

      def role_id_previously_changed?: () -> bool

      def role_id_previous_change: () -> ::Array[::Integer?]?

      def role_id_previously_was: () -> ::Integer?

      def role_id_before_last_save: () -> ::Integer?

      def role_id_change_to_be_saved: () -> ::Array[::Integer?]?

      def role_id_in_database: () -> ::Integer?

      def saved_change_to_role_id: () -> ::Array[::Integer?]?

      def saved_change_to_role_id?: () -> bool

      def will_save_change_to_role_id?: () -> bool

      def restore_role_id!: () -> void

      def clear_role_id_change: () -> void
    end
    include GeneratedAttributeMethods

    def left_side: () -> ::User?
    def left_side=: (::User?) -> ::User?
    def reload_left_side: () -> ::User?
    def build_left_side: (untyped) -> ::User
    def create_left_side: (untyped) -> ::User
    def create_left_side!: (untyped) -> ::User
    def role: () -> ::Role?
    def role=: (::Role?) -> ::Role?
    def reload_role: () -> ::Role?
    def build_role: (untyped) -> ::Role
    def create_role: (untyped) -> ::Role
    def create_role!: (untyped) -> ::Role
    module GeneratedAssociationMethods
    end
    include GeneratedAssociationMethods

    module GeneratedRelationMethods
    end

    class ActiveRecord_Relation < ::ActiveRecord::Relation
      include ::User::HABTM_Roles::GeneratedRelationMethods
      include ::_ActiveRecord_Relation[::User::HABTM_Roles, top]
      include ::Enumerable[::User::HABTM_Roles]
    end

    class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
      include ::User::HABTM_Roles::GeneratedRelationMethods
      include ::_ActiveRecord_Relation[::User::HABTM_Roles, top]
    end
  end
end
