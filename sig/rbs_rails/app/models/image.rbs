class Image < ::ApplicationRecord
  extend ::_ActiveRecord_Relation_ClassMethods[::Image, ::Image::ActiveRecord_Relation, ::Integer]

  module GeneratedAttributeMethods
    def id: () -> ::Integer

    def id=: (::Integer) -> ::Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ ::Integer?, ::Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> ::Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> ::Array[::Integer?]?

    def id_previously_was: () -> ::Integer?

    def id_before_last_save: () -> ::Integer?

    def id_change_to_be_saved: () -> ::Array[::Integer?]?

    def id_in_database: () -> ::Integer?

    def saved_change_to_id: () -> ::Array[::Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def imageable_type: () -> ::String

    def imageable_type=: (::String) -> ::String

    def imageable_type?: () -> bool

    def imageable_type_changed?: () -> bool

    def imageable_type_change: () -> [ ::String?, ::String? ]

    def imageable_type_will_change!: () -> void

    def imageable_type_was: () -> ::String?

    def imageable_type_previously_changed?: () -> bool

    def imageable_type_previous_change: () -> ::Array[::String?]?

    def imageable_type_previously_was: () -> ::String?

    def imageable_type_before_last_save: () -> ::String?

    def imageable_type_change_to_be_saved: () -> ::Array[::String?]?

    def imageable_type_in_database: () -> ::String?

    def saved_change_to_imageable_type: () -> ::Array[::String?]?

    def saved_change_to_imageable_type?: () -> bool

    def will_save_change_to_imageable_type?: () -> bool

    def restore_imageable_type!: () -> void

    def clear_imageable_type_change: () -> void

    def imageable_id: () -> ::Integer

    def imageable_id=: (::Integer) -> ::Integer

    def imageable_id?: () -> bool

    def imageable_id_changed?: () -> bool

    def imageable_id_change: () -> [ ::Integer?, ::Integer? ]

    def imageable_id_will_change!: () -> void

    def imageable_id_was: () -> ::Integer?

    def imageable_id_previously_changed?: () -> bool

    def imageable_id_previous_change: () -> ::Array[::Integer?]?

    def imageable_id_previously_was: () -> ::Integer?

    def imageable_id_before_last_save: () -> ::Integer?

    def imageable_id_change_to_be_saved: () -> ::Array[::Integer?]?

    def imageable_id_in_database: () -> ::Integer?

    def saved_change_to_imageable_id: () -> ::Array[::Integer?]?

    def saved_change_to_imageable_id?: () -> bool

    def will_save_change_to_imageable_id?: () -> bool

    def restore_imageable_id!: () -> void

    def clear_imageable_id_change: () -> void

    def created_at: () -> ::ActiveSupport::TimeWithZone

    def created_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ::ActiveSupport::TimeWithZone

    def updated_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods

  def image_attachment: () -> ::ActiveStorage::Attachment?
  def image_attachment=: (::ActiveStorage::Attachment?) -> ::ActiveStorage::Attachment?
  def build_image_attachment: (?untyped) -> ::ActiveStorage::Attachment
  def create_image_attachment: (untyped) -> ::ActiveStorage::Attachment
  def create_image_attachment!: (untyped) -> ::ActiveStorage::Attachment
  def reload_image_attachment: () -> ::ActiveStorage::Attachment?
  def image_blob: () -> ::ActiveStorage::Blob?
  def image_blob=: (::ActiveStorage::Blob?) -> ::ActiveStorage::Blob?
  def build_image_blob: (?untyped) -> ::ActiveStorage::Blob
  def create_image_blob: (untyped) -> ::ActiveStorage::Blob
  def create_image_blob!: (untyped) -> ::ActiveStorage::Blob
  def reload_image_blob: () -> ::ActiveStorage::Blob?
  def imageable: () -> untyped
  def imageable=: (untyped?) -> untyped?
  def reload_imageable: () -> untyped?
  module GeneratedAssociationMethods
    def image: () -> ::ActiveStorage::Attached::One

    def image=: (::ActionDispatch::Http::UploadedFile) -> ::ActionDispatch::Http::UploadedFile
              | (::Rack::Test::UploadedFile) -> ::Rack::Test::UploadedFile
              | (::ActiveStorage::Blob) -> ::ActiveStorage::Blob
              | (::String) -> ::String
              | ({ io: ::IO, filename: ::String, content_type: ::String? }) -> { io: ::IO, filename: ::String, content_type: ::String? }
              | (nil) -> nil
  end
  include GeneratedAssociationMethods

  def self.with_attached_image: () -> ::Image::ActiveRecord_Relation

  module GeneratedRelationMethods
    def with_attached_image: () -> ::Image::ActiveRecord_Relation
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include ::Image::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::Image, ::Integer]
    include ::Enumerable[::Image]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include ::Image::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::Image, ::Integer]
  end
end
